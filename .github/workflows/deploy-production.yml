name: Deploy to Production - Google Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  NODE_ENV: production
  PROJECT_NAME: testes/truther-api
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: us-central1
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
  IMAGE_TAG: ${{ github.sha }}
  CI: true

jobs:
  deploy:
    name: Deploy to Google Cloud Run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --immutable

      - name: Build application
        run: npm run build

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ env.GCP_SA_KEY }}
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        run: |
          docker build -t gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.PROJECT_NAME }}:${{ env.IMAGE_TAG }} .
          docker push gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.PROJECT_NAME }}:${{ env.IMAGE_TAG }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.PROJECT_NAME }}
          image: gcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.PROJECT_NAME }}:${{ env.IMAGE_TAG }}
          region: ${{ env.GCP_REGION }}
          env_vars: |
            PORT=3000
          flags: |
            --allow-unauthenticated
            --port=3000
            --memory=512Mi
            --cpu=1
            --max-instances=1
            --min-instances=0
            --timeout=300

      - name: Show service URL
        run: echo "Service URL ${{ steps.deploy.outputs.url }}"

      - name: Health check
        run: |
          sleep 30
          curl -f ${{ steps.deploy.outputs.url }}/health || exit 1

      - name: Create deployment summary
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentInfo = {
              service: '${{ env.PROJECT_NAME }}',
              url: '${{ steps.deploy.outputs.url }}',
              commit: '${{ env.IMAGE_TAG }}',
              commitMessage: '${{ github.event.head_commit.message }}',
              author: '${{ github.event.head_commit.author.name }}',
              timestamp: '${{ github.event.head_commit.timestamp }}'
            };

            const summary = `## Production Deployment Successful

            **Service:** ${deploymentInfo.service}
            **URL:** ${deploymentInfo.url}
            **Commit:** ${deploymentInfo.commit.substring(0, 7)}
            **Message:** ${deploymentInfo.commitMessage}
            **Author:** ${deploymentInfo.author}
            **Deployed at:** ${deploymentInfo.timestamp}

            ---
            *Deployment completed successfully*`;

            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: summary
            });
